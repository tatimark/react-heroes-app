{ "version": 3, "sources": ["auth/AuthContext.js", "types/types.js", "auth/authReducer.js", "data/heroes.js", "components/heroes/HeroCard.js", "components/heroes/HeroList.js", "selectors/getHeroesByPublisher.js", "components/dc/DcScreen.js", "components/heroes/HeroScreen.js", "selectors/getHeroById.js", "components/marvel/MarvelScreen.js", "components/search/SearchScreen.js", "hooks/useForm.js", "selectors/getHeroesByName.js", "components/ui/Navbar.js", "routers/DashboardRoutes.js", "routers/PrivateRoute.js", "components/login/LoginScreen.js", "routers/PublicRoute.js", "routers/AppRouter.js", "HeroesApp.js", "index.js"], "names": ["AuthContext", "createContext", "types", "authReducer", "action", "type", "payload", "logged", "heroes", "HeroCard", "id", "superhero", "alter_ego", "publisher", "first_appearance", "characters", "className", "style", "maxWidth", "src", "alt", "to", "HeroList", "useMemo", "includes", "Error", "filter", "hero", "getHeroesByPublisher", "map", "DcScreen", "HeroScreen", "history", "heroeId", "useParams", "find", "onClick", "length", "push", "goBack", "MarvelScreen", "SearchScreen", "location", "useLocation", "queryString", "parse", "search", "q", "initialState", "useState", "values", "setValues", "target", "name", "value", "useForm", "searchText", "formValues", "handleInputChange", "heroesFiltered", "toLocaleLowerCase", "getHeroesByName", "onSubmit", "e", "preventDefault", "placeholder", "autoComplete", "onChange", "Navbar", "useContext", "user", "dispatch", "useHistory", "activeClassName", "exact", "replace", "DashboardRoutes", "path", "component", "PrivateRoute", "isAuthenticated", "Component", "rest", "localStorage", "setItem", "pathname", "props", "LoginScreen", "lastPath", "getItem", "PublicRoute", "AppRouter", "init", "JSON", "HeroesApp", "useReducer", "useEffect", "stringify", "Provider", "ReactDOM", "render", "document", "getElementById"], "mappings": "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", "file": "static/js/main.2b9c8281.chunk.js", "sourcesContent": ["import { createContext } from \"react\";\n\nexport const AuthContext = createContext();", "export const types = {\n    login: '[auth] login',\n    logout: '[auth] logout'\n}", "import { types } from \"../types/types\";\n\n// const state = {\n//     name: 'Fernando',\n//     logged: true\n// }\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                ...action.payload,\n                logged: true\n            }\n        case types.logout:\n            return {\n                logged: false\n            }\n\n\n\n        default:\n            break;\n    }\n}", "export const heroes = [{\n        'id': 'dc-batman',\n        'superhero': 'Batman',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Bruce Wayne',\n        'first_appearance': 'Detective Comics #27',\n        'characters': 'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero': 'Superman',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Kal-El',\n        'first_appearance': 'Action Comics #1',\n        'characters': 'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero': 'Flash',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Jay Garrick',\n        'first_appearance': 'Flash Comics #1',\n        'characters': 'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero': 'Green Lantern',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Alan Scott',\n        'first_appearance': 'All-American Comics #16',\n        'characters': 'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero': 'Green Arrow',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Oliver Queen',\n        'first_appearance': 'More Fun Comics #73',\n        'characters': 'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero': 'Wonder Woman',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Princess Diana',\n        'first_appearance': 'All Star Comics #8',\n        'characters': 'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero': 'Martian Manhunter',\n        'publisher': 'DC Comics',\n        'alter_ego': 'J\\'onn J\\'onzz',\n        'first_appearance': 'Detective Comics #225',\n        'characters': 'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero': 'Robin/Nightwing',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Dick Grayson',\n        'first_appearance': 'Detective Comics #38',\n        'characters': 'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero': 'Blue Beetle',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Dan Garret',\n        'first_appearance': 'Mystery Men Comics #1',\n        'characters': 'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero': 'Black Canary',\n        'publisher': 'DC Comics',\n        'alter_ego': 'Dinah Drake',\n        'first_appearance': 'Flash Comics #86',\n        'characters': 'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero': 'Spider Man',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Peter Parker',\n        'first_appearance': 'Amazing Fantasy #15',\n        'characters': 'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero': 'Captain America',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Steve Rogers',\n        'first_appearance': 'Captain America Comics #1',\n        'characters': 'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero': 'Iron Man',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Tony Stark',\n        'first_appearance': 'Tales of Suspense #39',\n        'characters': 'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero': 'Thor',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Thor Odinson',\n        'first_appearance': 'Journey into Myster #83',\n        'characters': 'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero': 'Hulk',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Bruce Banner',\n        'first_appearance': 'The Incredible Hulk #1',\n        'characters': 'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero': 'Wolverine',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'James Howlett',\n        'first_appearance': 'The Incredible Hulk #180',\n        'characters': 'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero': 'Daredevil',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Matthew Michael Murdock',\n        'first_appearance': 'Daredevil #1',\n        'characters': 'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero': 'Hawkeye',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Clinton Francis Barton',\n        'first_appearance': 'Tales of Suspense #57',\n        'characters': 'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero': 'Cyclops',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Scott Summers',\n        'first_appearance': 'X-Men #1',\n        'characters': 'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero': 'Silver Surfer',\n        'publisher': 'Marvel Comics',\n        'alter_ego': 'Norrin Radd',\n        'first_appearance': 'The Fantastic Four #48',\n        'characters': 'Norrin Radd'\n    }\n]", "import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const HeroCard = ({ id , superhero, publisher, alter_ego, first_appearance, characters }) => {\n    return (\n        <div className=\"card ms-3\" style={{ maxWidth: 540}}>\n           <div className=\"row no-gutters\">\n               <div className=\"col-md-4\">\n                        <img src={ `../assets/heroes/${ id }.jpg`} className=\"card-img\" alt={superhero}/>\n               </div>\n               <div className=\"col-md-8\">\n                   <div className=\"card-body\">\n                        <h5 className=\"card-title\">{superhero}</h5>\n                       \n                        {\n                            (alter_ego !== characters) \n                        ? <p className=\"card-text\">{ characters }</p> :  <p className=\"card-text\">{alter_ego}</p>\n                       \n                        }\n\n                        <p className=\"card-text\">\n                            <small className=\"text-muted\">{ first_appearance }</small>\n                        </p>\n                        <Link to={`./heroe/${ id }`}>\n                            Más...\n                        </Link>\n                   </div>\n                    \n               </div>\n           </div>\n        </div>\n    )\n}\n", "import React, { useMemo } from 'react'\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\nimport { HeroCard } from './HeroCard';\n\nexport const HeroList = ({ publisher }) => {\n\n\n\n   const heroes =  useMemo(() => getHeroesByPublisher( publisher ), [ publisher ])\n \n  //const heroes = getHeroesByPublisher( publisher );\n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n            {\n                heroes.map(hero => ( //parentesi s para retornar un objeto\n                    <HeroCard \n                            key={hero.id}\n                            { ...hero }\n                    />\n                ))\n            }\n            \n        </div>\n    )\n}\n//implementar en la página de dc o marvel", "import { heroes } from \"../data/heroes\";\n\nexport const getHeroesByPublisher = (publisher) => {\n\n    const validPublishers = ['DC Comics', 'Marvel Comics']; //si la persona escribe un publisher que no es aceptado da error\n    if (!validPublishers.includes(publisher)) { //si no lo encuentra\n        throw new Error(`Publisher \"${ publisher }\" no es correcto`);\n    }\n\n    return heroes.filter(hero => hero.publisher === publisher);\n}", "import React from 'react';\nimport { HeroList } from '../heroes/HeroList';\n\nexport const DcScreen = () => {\n\n    return (\n        <div>\n            <h1>DC Screen</h1>\n            <hr />\n            <HeroList publisher={ 'DC Comics' }/>\n        </div>\n    )\n}\n", "import React, { useMemo } from 'react'\nimport {  Redirect, useParams } from 'react-router-dom'\nimport { getHeroesById } from '../../selectors/getHeroById';\n\nexport const HeroScreen = ({ history }) => {\n\n    //const params = useParams(); //extrae parametros que van por el url\n    const { heroeId } = useParams();\n\n\n    const hero =  useMemo(() => getHeroesById(heroeId), [ heroeId ])\n    // const hero = getHeroesById(heroeId);\n        // si manipulas la ruta en el navegador te lo coge como undefined y no te devuelve héroe\n    if( !hero ) {\n        return <Redirect to=\"/\" />\n    }// si el héroe no existe \n\n    const handleReturn = () =>{\n        if( history.length <= 2){ // si copias la url directamente en incógnito al volver no te aparece nada\n            history.push(\"/\");\n        }else{\n            history.goBack();\n            //  history.replace(\"/\");\n        }\n    \n        \n    }\n\n    const {  superhero, publisher, alter_ego, first_appearance, characters } = hero;\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-4\">\n                <img src={`../assets/heroes/${ heroeId }.jpg`}\n                className=\"img-thumbnail animate__animated animate__fadeInLeft\"\n                alt={ superhero }\n                />\n            </div>\n            <div className=\"col-8\">\n                <h3>{ superhero}</h3>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\"><b> Alter ego : </b>{ alter_ego}</li>\n                    <li className=\"list-group-item\"><b> Publisher : </b>{ publisher }</li>\n                    <li className=\"list-group-item\"><b> First appearance : </b>{ first_appearance }</li>\n                </ul>\n\n                <h5>Characters </h5>\n                 <p>{ characters }</p>\n                 <button \n                    className=\"btn btn-outline-info\"\n                    onClick={ handleReturn }\n                 >\n                        Return\n                 </button>\n\n            </div>\n        </div>\n    )\n}\n", "import { heroes } from \"../data/heroes\";\n\nexport const getHeroesById = (id) => {\n\n    return heroes.find(hero => hero.id === id);\n}", "import React from 'react';\nimport { HeroList } from '../heroes/HeroList';\n\nexport const MarvelScreen = () => {\n\n    return (\n        <div>\n            <h1>Marvel Screen</h1>\n            <hr />\n            <HeroList publisher={ 'Marvel Comics' }/>\n        </div>\n    )\n}\n", "import React, { useMemo } from 'react';\nimport queryString from 'query-string';\nimport { HeroCard } from '../heroes/HeroCard';\nimport { useForm } from '../../hooks/useForm';\nimport { useLocation } from 'react-router-dom';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\nexport const SearchScreen = ({ history }) => {\n\n//para obtener el location\n\n    const location = useLocation(); //regocger los parametros de la url\n    // console.log(location.search);\n   const { q= '' } =  queryString.parse(location.search); //tengo todo parseado , desestructuro porque me interesa el q\n   // si el q es undefined igual a un string vacio\n\n    const [ formValues, handleInputChange] = useForm( {\n        searchText: q\n    } );\n\n    const { searchText } = formValues;\n\n\n    const heroesFiltered =  useMemo(() => getHeroesByName( q ), [ q ])\n \n\n    // const heroesFiltered = getHeroesByName( searchText ); \n\n   const handleSearch = (e) => {\n    e.preventDefault();\n\n    history.push(`?q=${ searchText }`)\n\n\n}\n\n\n    return (\n        <div>\n            <h1>Search</h1>\n            <hr />\n            <div className=\"row\">\n                <div className=\"col-5\">\n                    <h4>Search form</h4>\n                    <hr />\n                    <form onSubmit={ handleSearch }>\n                        <input \n                            type=\"text\"\n                            placeholder=\"Find your hero\"\n                            className=\"form-control\"\n                            name=\"searchText\"\n                            autoComplete=\"off\"\n                            value={ searchText }\n                            onChange={ handleInputChange }\n                        />\n                        <button\n                            type=\"submit\"\n                            className=\"btn m-1 btn-block btn-outline-primary\"\n                        >\n                            Search...\n                        </button>\n                    </form>\n                </div>\n                <div className=\"col-7\">\n                        <h4>Results</h4>\n                        <hr />\n                       { (q==='') && <div className=\"alert alert-info\">Search a hero</div>}\n    { (q==='' && heroesFiltered.length === 0) && <div className=\"alert alert-error\">There is no a hero with { q }</div>}\n                        {\n                            heroesFiltered.map( hero =>(\n                                <HeroCard \n                                    key={ hero.id}\n                                    {...hero }\n                                />\n                            ))\n                        }\n                </div>\n            </div>\n        </div>\n    )\n}\n", "import { useState } from 'react'\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    }\n\n    return [values, handleInputChange, reset];\n}", "import { heroes } from \"../data/heroes\";\n\n\nexport const getHeroesByName = (name = '') => {\n\n    //si no recibo ningún string\n    if (name === '') {\n        return [];\n    }\n    name = name.toLocaleLowerCase(); // para pasar a minúscula el que recibe\n    return heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes(name))\n\n}", "import React, { useContext } from 'react'\nimport { Link, NavLink, useHistory } from 'react-router-dom'\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const Navbar = () => {\n\n    const { user:{name} , dispatch } = useContext( AuthContext );\n    const history = useHistory();\n\n    const handleLogout = () =>{\n    \n     \n        dispatch({\n            type: types.logout\n        });\n   \n        history.replace('/login')\n     \n\n        \n    }\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n                Asociaciones\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/marvel\"\n                    >\n                        Marvel\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/dc\"\n                    >\n                        DC\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/search\"\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <span className=\"nav-item nav-link text-info\">\n                       { name } \n                    </span>\n                    <button \n          \n                        className=\"nav-item nav-link btn\" \n                        onClick={ handleLogout }\n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    )\n}", "import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { DcScreen } from '../components/dc/DcScreen';\nimport { HeroScreen } from '../components/heroes/HeroScreen';\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\nimport { Navbar } from '../components/ui/Navbar';\n\nexport const DashboardRoutes = ( ) => {\n    return ( \n        <>\n            <Navbar />\n\n            <div className=\"container mt-2\">\n                <Switch>\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } />\n                    <Route exact path=\"/heroe/:heroeId\" component={ HeroScreen } />\n                    <Route exact path=\"/dc\" component={ DcScreen } />\n                    <Route exact path=\"/search\" component={ SearchScreen } />\n                    <Redirect to=\"/marvel\" />\n                </Switch>\n            </div>\n        </>\n    )\n}", "import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    localStorage.setItem('lastPath', rest.location.pathname);\n    \n    return (\n        <Route {...rest}\n            component={ (props) =>(\n                (isAuthenticated)\n                ? <Component {...props}/>\n                :<Redirect to=\"/login\" />\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}", "import React, { useContext } from 'react';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const LoginScreen = ({ history }) => {\n\n    const { dispatch } = useContext( AuthContext );\n\n    const handleLogin = () =>{\n\n        const lastPath = localStorage.getItem('lastPath') || '/';\n    //    history.push('/');\n    //    history.replace('/');\n    //estraer del context dispatch y este distpacth mandar información mediante un action que tenga el typo de login\n    // el objeto que se deberia enviar es un objeto con name: 'Tania' para que envie en el dispatch\n \n    dispatch({\n                type: types.login,\n                payload: {\n                    name: 'Fernando'\n                }\n            });\n\n            history.replace(lastPath);\n    }\n  \n    return (\n        <div className=\"container mt-5\">\n            <h1>Login</h1>\n            <hr />\n            <button \n            className=\"btn btn-primary\"\n            onClick={ handleLogin }\n            >\n                Entrar\n            </button>\n        </div>\n    )\n}\n", "import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n\n    return (\n        <Route {...rest}\n            component={ (props) =>(\n                (!isAuthenticated)\n                ? <Component {...props}/>\n                :<Redirect to=\"/\" />\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}", "import React, { useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch\n} from \"react-router-dom\";\nimport { DashboardRoutes } from \"./DashboardRoutes\";\nimport { PrivateRoute } from \"./PrivateRoute\";\n\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { LoginScreen } from \"../components/login/LoginScreen\";\nimport { PublicRoute } from \"./PublicRoute\";\n\n\nexport const AppRouter = () => {\n\n  const { user } = useContext(AuthContext);\n\n    return (\n        <Router>\n      <div>\n\n        <Switch>\n            <PublicRoute  \n            exact\n            path=\"/login\"\n             component={ LoginScreen } \n             isAuthenticated={ user.logged }\n             />\n            <PrivateRoute \n            path=\"/\" \n            component={ DashboardRoutes } \n            isAuthenticated={ user.logged }\n            />\n\n        </Switch>\n      </div>\n    </Router>\n    )\n}\n", "import React, { useEffect, useReducer } from 'react'\nimport { AuthContext } from './auth/AuthContext'\nimport { authReducer } from './auth/authReducer'\nimport { AppRouter } from './routers/AppRouter'\n// el init es porque va a leer el localstorage, va a retornar revisar el localstorage JSON.parse para evaluarlo\n//evaluar localstorage si existe lo va a retornar y sino va a retornar un objeto con el logged en false\nconst init = () =>{\n    return JSON.parse(localStorage.getItem('user')) || {\n        logged: false\n    }\n}\n\nexport const HeroesApp = () => {\n    \n    const [ user, dispatch] = useReducer(authReducer, {}, init)\n\n    //grabar en el localstorage si ese usuario cambia\n    useEffect( () =>{ \n        localStorage.setItem('user', JSON.stringify( user )); // solo guarda string el localstorage\n    }, [user] )\n\n    return ( \n        <AuthContext.Provider value={{ user, dispatch }}>\n        <AppRouter />\n\n        </AuthContext.Provider>\n    )\n}", "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\n\nReactDOM.render( \n    <HeroesApp />,\n    document.getElementById('root')\n);\n\n"], "sourceRoot": "" }